// <auto-generated />
using System;
using HotelBooking.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelBooking.Infrastructure.Migrations
{
    [DbContext(typeof(BookingDbContext))]
    [Migration("20250716091022_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelBooking.Infrastructure.Entities.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BookingRef")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelRoomId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HotelRoomId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Entities.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Hotel Rengoku"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Hotel Konohagakure"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Hotel Tomorrowland"
                        });
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Entities.HotelRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomId");

                    b.ToTable("HotelRooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HotelId = 1,
                            Quantity = 2,
                            RoomId = 1
                        },
                        new
                        {
                            Id = 2,
                            HotelId = 1,
                            Quantity = 2,
                            RoomId = 2
                        },
                        new
                        {
                            Id = 3,
                            HotelId = 1,
                            Quantity = 2,
                            RoomId = 3
                        },
                        new
                        {
                            Id = 4,
                            HotelId = 2,
                            Quantity = 3,
                            RoomId = 1
                        },
                        new
                        {
                            Id = 5,
                            HotelId = 2,
                            Quantity = 3,
                            RoomId = 2
                        },
                        new
                        {
                            Id = 6,
                            HotelId = 3,
                            Quantity = 3,
                            RoomId = 1
                        },
                        new
                        {
                            Id = 7,
                            HotelId = 3,
                            Quantity = 3,
                            RoomId = 3
                        });
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 1,
                            Name = "Single",
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 2,
                            Name = "Double",
                            Type = 2
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 4,
                            Name = "Deluxe",
                            Type = 3
                        });
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Entities.Booking", b =>
                {
                    b.HasOne("HotelBooking.Infrastructure.Entities.HotelRoom", "HotelRoom")
                        .WithMany("Bookings")
                        .HasForeignKey("HotelRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HotelRoom");
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Entities.HotelRoom", b =>
                {
                    b.HasOne("HotelBooking.Infrastructure.Entities.Hotel", "Hotel")
                        .WithMany("HotelRooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelBooking.Infrastructure.Entities.Room", "Room")
                        .WithMany("HotelRooms")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Entities.Hotel", b =>
                {
                    b.Navigation("HotelRooms");
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Entities.HotelRoom", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("HotelBooking.Infrastructure.Entities.Room", b =>
                {
                    b.Navigation("HotelRooms");
                });
#pragma warning restore 612, 618
        }
    }
}
